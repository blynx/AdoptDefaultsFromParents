<?php // namespace ProcessWire;

class AdoptDefaultsFromParents extends WireData implements Module, ConfigurableModule { 

  public static function getModuleInfo() {
    return array(
      'title' => 'Adopt field values as defaults from parents',
      'version' => 002,
      'author' => 'Steffen Henschel',
      'summary' => 'Fills fields of newly added pages with corresponding field-values of their parents. Configurable by setting "giving templates" and "adopting fields".',
      'href' => '',
      'autoload' => true,
      'singular' => true
      );
  }

  public function ready() {
    $this->pages->addHookAfter('Pages::added', $this, 'adoptDefaults');
  }

  /**
   * [adoptDefaults description]
   * @param  [type] $event [description]
   * @return [type]        [description]
   */
  public function adoptDefaults($event) {

    $page = $event->arguments(0);
    $parent = $page->parent;

    $adoptingFields = $this->adopting_fields; // array of field names
    $givingTemplates = $this->giving_templates; // array of template ids

    // save outputformatting state
    // and set to false
    $of = $page->of();
    $page->of(false);

    foreach ($page->data as $fName => $fValue) {
      // check if parents field has value
      // also constrain to allowed adopting fields and giving templates
      // finally set the field value
      if ($parent->$fName != "" && in_array($fName, $adoptingFields) && in_array($parent->template->id, $givingTemplates)) {
        $page->set($fName, $parent->$fName);
      }
    }

    // save page
    // and re-set of to initial state
    $page->save();
    $page->of($of);

  }

  public function getModuleConfigInputfields($data) {

    $inputfields = new InputfieldWrapper();

    $field = wire('modules')->get("InputfieldAsmSelect");
    $field->name = "giving_templates";
    $field->label = __("Giving templates");
    $field->description = __("Choose those templates, that can give field values to their newly added children.");
    foreach (wire('templates')->getAll() as $key => $template) {
      $field->addOption($key, $template);
    }
    if (isset($data['giving_templates'])) $field->value = $data['giving_templates'];
    $inputfields->add($field);

    $field = wire('modules')->get('InputfieldAsmSelect');
    $field->name = 'adopting_fields';
    $field->label = __("Adopting fields");
    $field->description = __("Fields that can adopt default values from parent template / page");
    foreach (wire('fields')->getAll() as $f) {
      $field->addOption($f->name, $f->title);
    }
    if(isset($data['adopting_fields'])) $field->value = $data['adopting_fields'];
    $inputfields->add($field); 

    return $inputfields;
  }
  
}

?>